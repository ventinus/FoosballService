interface FromTreeOutput {
    /**
     * Absolute path of the created temporary directory, containing the generated structure
     */
    readonly directory: string;
    /**
     * Cleanup function that will remove the generated files once called
     */
    readonly cleanup: () => void;
}
/**
 * Collection of file-system utility methods
 */
export declare class FsUtils {
    /**
     * Generates a filesystem structure from a string,
     * formatted like the output of a `tree` shell command
     *
     * @param tmpPrefix temp directory prefix, used by {@link fs.mkdtemp}
     * @param tree
     * @param content the content
     *
     * @returns an array containing the absolute path of the created directory,
     *          and a cleanup function that will remove the generated files on invocation
     */
    static fromTree(tmpPrefix: string, tree: string, content?: string): FromTreeOutput;
    /**
     * RegExp matching characters used to indent the tree, indicating the line depth
     */
    private static readonly INDENT_CHARACTERS_REGEX;
    /**
     * RegExp matching characters trailing a tree line
     */
    private static readonly TRAILING_CHARACTERS_REGEX;
    /**
     * RegExp determining whether a given line is an explicit directory
     */
    private static readonly IS_DIRECTORY_REGEX;
    /**
     * RegExp determining whether a given line is a symblic link
     */
    private static readonly SYMBOLIC_LINK_REGEX;
}
export {};
